USE DB_CD
GO



-- ============================================
-- CRIA PROCEDURE DE ULTIMO REGISTRO NA TABELA 
-- ============================================
IF NOT EXISTS (SELECT 1 FROM SYS.ALL_OBJECTS WHERE NAME = 'SP_RETORNA_ULTIMO_REGISTRO' AND TYPE = 'P')
BEGIN
	EXEC ('CREATE PROCEDURE SP_RETORNA_ULTIMO_REGISTRO AS SELECT 1') 
END
GO

ALTER PROCEDURE SP_RETORNA_ULTIMO_REGISTRO (@TABELA VARCHAR(MAX), @QTD_REGISTROS INT, @CONT INT, @QTD_REGISTROS_SAIDA INT OUTPUT, @CONT_SAIDA INT OUTPUT)
	AS 
	BEGIN


	CREATE TABLE #TMP_ULTIMO_REGISTRO 
(
	CONT INT,
	QTD_REGISTROS INT
)

DECLARE 
	@PK VARCHAR(100),
	@SQL VARCHAR(MAX),
	@AUX_CONT INT,
	@AUX_QTD  INT



SET @PK = 
(
	SELECT COLUMN_NAME 
	FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE
	WHERE OBJECTPROPERTY(OBJECT_ID(constraint_name), 'IsPrimaryKey') = 1 AND TABLE_NAME = @TABELA
)


IF (@PK IS NULL)
BEGIN 
	INSERT INTO #TMP_ULTIMO_REGISTRO VALUES (@CONT,@QTD_REGISTROS)
END 

ELSE 
BEGIN 

	SET @SQL = 
	'
	IF (SELECT COUNT(*) AS QTD FROM '+ @TABELA+ ' ) >= 0
		BEGIN 
			INSERT INTO #TMP_ULTIMO_REGISTRO VALUES 
			(
				(
					SELECT 
					CASE 
						WHEN MAX('+@PK+') IS NULL THEN 0 
						ELSE MAX('+@PK+') + 1
					END
					FROM '+@TABELA+'
				),
				----------------------------------------------- 
				(
					(
						SELECT 
						CASE 
							WHEN MAX('+@PK+') IS NULL THEN 0 + '+CONVERT(VARCHAR(MAX),ISNULL(@QTD_REGISTROS,0))+'
							ELSE MAX('+@PK+') + 1 + ' + CONVERT(VARCHAR(MAX),ISNULL(@QTD_REGISTROS,0))+'
						END
						FROM '+@TABELA+' 
					) 
				)
			)
		END

	
	'
END
 

EXEC (@SQL)
	
SET @CONT_SAIDA = (SELECT CONT FROM #TMP_ULTIMO_REGISTRO)
SET @QTD_REGISTROS_SAIDA = (SELECT QTD_REGISTROS FROM #TMP_ULTIMO_REGISTRO)
	
DROP TABLE #TMP_ULTIMO_REGISTRO

END
GO


-- ==================================
-- CRIA PROCEDURE DE NUMERO ALEATORIO
-- ==================================

IF NOT EXISTS (SELECT 1 FROM SYS.ALL_OBJECTS WHERE NAME = 'SP_NUMERO_ALEATORIO')
BEGIN
	EXEC ('CREATE PROCEDURE SP_NUMERO_ALEATORIO AS SELECT 1') 
END
GO

ALTER PROCEDURE SP_NUMERO_ALEATORIO(@MIN INT , @MAX INT, @RETORNO INT OUTPUT)
AS 
BEGIN 
	SET @RETORNO =  ROUND(RAND() * @MAX - @MIN, 0) + @MIN 
END
GO

-- =========================
-- NUMERO DECIMAL ALEATORIO
-- =========================

IF NOT EXISTS (SELECT 1 FROM SYS.ALL_OBJECTS WHERE NAME = 'SP_NUMERO_DECIMAL_ALEATORIO')
BEGIN
	EXEC ('CREATE PROCEDURE SP_NUMERO_DECIMAL_ALEATORIO AS SELECT 1') 
END
GO

ALTER PROCEDURE SP_NUMERO_DECIMAL_ALEATORIO(@MIN INT, @MAX INT, @RETORNO DECIMAL(5,2) OUT)
AS 
BEGIN
	SET @RETORNO  =  RAND() * @MAX - @MIN + @MIN 
END






-- ================================================================
-- PROCEDURE PARA DATAS ALEATORIAS ENTRE 01/01/1970 AND 01/06/2019
-- ================================================================

IF NOT EXISTS (SELECT 1 FROM SYS.all_objects WHERE NAME LIKE 'SP_DATA_ALEATORIA') 
BEGIN
	EXEC ('CREATE PROCEDURE SP_DATA_ALEATORIA AS SELECT 1') 
END
GO 

ALTER PROCEDURE SP_DATA_ALEATORIA (@DATA_SAIDA DATE OUT)
AS 
BEGIN
	
	DECLARE 
		@DIAS_PASSADO INT 
		
	EXEC SP_NUMERO_ALEATORIO 10, 18048, @DIAS_PASSADO OUT 

	SET @DATA_SAIDA = DATEADD(DAY,- @DIAS_PASSADO, '2019-06-01')

	

END

GO

--DECLARE 
--	@LANCAMENTO DATE 
--EXEC SP_DATA_ALEATORIA @LANCAMENTO OUT
--SELECT @LANCAMENTO








-- ==================================================
-- CRIA PROCEDURE QUE PREENCHE A BASE DE DADOS DB_CD
-- ==================================================

IF NOT EXISTS (SELECT 1 FROM SYS.ALL_OBJECTS WHERE NAME = 'SP_PREENCHE_DB_CD')
BEGIN
	EXEC ('CREATE PROCEDURE SP_PREENCHE_DB_CD AS SELECT 1') 
END
GO

ALTER PROCEDURE SP_PREENCHE_DB_CD (@TABELA VARCHAR(MAX), @QTD_REGISTROS INT)
AS 
BEGIN

	DECLARE 
		@CONT INT = 0

	EXEC SP_RETORNA_ULTIMO_REGISTRO @TABELA, @QTD_REGISTROS , @CONT, @QTD_REGISTROS OUT, @CONT OUT


	--- INSERIR NA AUTOR
	--===============================================

	IF(@TABELA = 'AUTOR')
	BEGIN

		WHILE @CONT < @QTD_REGISTROS 
		BEGIN
			INSERT INTO AUTOR VALUES (@CONT,(SELECT 'AUTOR' + CONVERT(VARCHAR(100), @CONT)))
			SET @CONT = @CONT + 1 
		END
	END




	--===============================================
	--- INSERIR NA MUSICA
	--===============================================

	IF(@TABELA = 'MUSICA')
	BEGIN

		WHILE @CONT < @QTD_REGISTROS 
		BEGIN
			DECLARE 
				@TEMPO_MUSICA DECIMAL(5,2),
				@NOME_MUSICA VARCHAR(MAX) = (SELECT 'MUSICA' + CONVERT(VARCHAR(MAX), @CONT))


				-- RETORNA O TEMPO DA MÚSICA ENTRE 2 E 10 MINUTOS
				EXEC SP_NUMERO_DECIMAL_ALEATORIO 2, 10, @TEMPO_MUSICA OUT 


			INSERT INTO MUSICA VALUES (@CONT, @NOME_MUSICA, @TEMPO_MUSICA)
			SET @CONT = @CONT + 1 
		END
	END

	IF(@TABELA = 'CD_CATEGORIA')
	BEGIN 

	PRINT @CONT
		WHILE @CONT < @QTD_REGISTROS 
		BEGIN
			DECLARE 
				 @MENOR_PRECO DECIMAL(5,2)
				,@MAIOR_PRECO DECIMAL(5,2)

				
				EXEC SP_NUMERO_DECIMAL_ALEATORIO 10, 60,  @MENOR_PRECO OUT 
				EXEC SP_NUMERO_DECIMAL_ALEATORIO 61, 120, @MAIOR_PRECO OUT

				INSERT INTO CD_CATEGORIA VALUES (@CONT, @MENOR_PRECO, @MAIOR_PRECO)

				--PRINT 'INSERT INTO CD_CATEGORIA VALUES ('+@CONT+', '+ @MENOR_PRECO + ', '+ @MAIOR_PRECO+' )'

				SET @CONT = @CONT + 1 
		END
	END

	--============= ============= ============= ============= ============= ============= ============= ============= ============= ============= 

	IF(@TABELA = 'GRAVADORA')
	BEGIN

		WHILE @CONT < @QTD_REGISTROS 
		BEGIN
			DECLARE 
	
				@NOME     VARCHAR(MAX) = (SELECT 'GRAVADORA' + CONVERT(VARCHAR(MAX), @CONT)),
				@ENDERECO VARCHAR(MAX) = (SELECT 'ENDERECO_GRAVADORA' + CONVERT(VARCHAR(MAX), @CONT)),
				@TELEFONE INT          = (SELECT ROUND((( 999999999 - 111111111 - 1) * RAND() + 111111111),0)),
				@CONTATO  VARCHAR(MAX) = (SELECT 'CONTATO_GRAVADORA' + CONVERT(VARCHAR(MAX), @CONT)),
				@URL      VARCHAR(MAX) = (SELECT 'https://www.gravadora' + CONVERT(VARCHAR(MAX), @CONT) + '.com.br')

				INSERT INTO GRAVADORA VALUES (@CONT, @NOME, @ENDERECO, @TELEFONE, @CONTATO, @URL)

				SET @CONT = @CONT + 1 
		END
	END

	-- TABELA CD COM ASSOCIAÇÃO COM A TABELA GRAVADORA

	--============= ============= ============= ============= ============= ============= ============= ============= ============= 


	IF(@TABELA = 'AUTOR')
	BEGIN
		WHILE @CONT < @QTD_REGISTROS 
		BEGIN
			DECLARE 
				@NOME_AUTOR VARCHAR(MAX) = (SELECT 'AUTOR' + CONVERT(VARCHAR(MAX), @CONT))

				INSERT INTO AUTOR VALUES (@CONT, @NOME_AUTOR)

				SET @CONT = @CONT + 1 
		END
	END

	--============= ============= ============= ============= ============= ============= ============= ============= 



	IF(@TABELA = 'CD')
	BEGIN 
		DECLARE 
			@REGISTRO_GRAVADORA INT = 0,
			@REGISTRO_CATEGORIA INT = 0,
			@MIN_GRAVADORA INT = 0, 
			@MAX_GRAVADORA INT = 0,

			@MIN_CATEGORIA INT = 0,
			@MAX_CATEGORIA INT = 0,

			@NOME_CD VARCHAR(MAX),
			@PRECO_VENDA INT,
			@DATA_LANCAMENTO DATE
	
			SELECT @MIN_GRAVADORA = MIN(CODIGO_GRAVADORA), @MAX_GRAVADORA = MAX(CODIGO_GRAVADORA) FROM GRAVADORA
			SELECT @MIN_CATEGORIA = MIN(CODIGO_CATEGORIA), @MAX_CATEGORIA = MAX(CODIGO_CATEGORIA) FROM CD_CATEGORIA

		WHILE @CONT < @QTD_REGISTROS
		BEGIN 
	
			SELECT 
				@REGISTRO_GRAVADORA = (SELECT ROUND((( @MAX_GRAVADORA - @MIN_GRAVADORA - 1) * RAND() + @MIN_GRAVADORA),0)), 
				@REGISTRO_CATEGORIA = (SELECT ROUND((( @MAX_CATEGORIA - @MIN_CATEGORIA - 1) * RAND() + @MIN_CATEGORIA),0)),
				@NOME_CD = (SELECT 'CD' + CONVERT(VARCHAR(MAX), @CONT))
		
				EXEC SP_DATA_ALEATORIA @DATA_LANCAMENTO OUT 


			SELECT @PRECO_VENDA = (SELECT ROUND(((MAIOR_PRECO - MENOR_PRECO - 1) * RAND() + MENOR_PRECO),0))
			FROM CD_CATEGORIA 
			WHERE CODIGO_CATEGORIA = @REGISTRO_CATEGORIA
	
			INSERT INTO CD VALUES (@CONT, @REGISTRO_GRAVADORA, @REGISTRO_CATEGORIA, @NOME_CD, @PRECO_VENDA, @DATA_LANCAMENTO,NULL)

			--PRINT 'INSERT INTO CD VALUES (@CONT, @REGISTRO_GRAVADORA, @REGISTRO_CATEGORIA, @NOME_CD, @PRECO_VENDA, @DATA_LANCAMENTO,NULL)'

			SET @CONT = @CONT + 1 
		END
	END
	--============= ============= ============= ============= ============= ============= ============= ============= ============= ============= ============= 



	IF(@TABELA = 'MUSICA_AUTOR')
	BEGIN

	DECLARE 
		@MIN_AUTOR  INT
	   ,@MAX_AUTOR  INT
	   ,@AUTOR      INT
	   ,@MIN_MUSICA INT 
	   ,@MAX_MUSICA INT
	   ,@MUSICA     INT
		
		
		SELECT 
			 @MIN_AUTOR = MIN(CODIGO_AUTOR)
			,@MAX_AUTOR = MAX(CODIGO_AUTOR)  
		FROM 
			AUTOR
		
		SELECT 
			 @MIN_MUSICA = MIN(CODIGO_MUSICA)
			,@MAX_MUSICA = MAX(CODIGO_MUSICA) 
		FROM 
			MUSICA	

		 
		WHILE @CONT < @QTD_REGISTROS 
				
		BEGIN
			EXEC SP_NUMERO_ALEATORIO @MIN_AUTOR, @MAX_AUTOR, @AUTOR OUT 
			EXEC SP_NUMERO_ALEATORIO @MIN_MUSICA, @MAX_MUSICA, @MUSICA OUT 
		
			INSERT INTO MUSICA_AUTOR VALUES (@MUSICA, @AUTOR)
			--PRINT 'INSERT INTO MUSICA_AUTOR VALUES ('+CONVERT(VARCHAR(20), @MUSICA)+', '+CONVERT(VARCHAR(20), @AUTOR)+')'

			SET @CONT = @CONT + 1 
		END
	END






	IF(@TABELA = 'FAIXA')
	BEGIN 

		DECLARE 
			 @MIN_CD           INT
			,@MAX_CD           INT
			,@CD               INT
			,@MIN_MUSICA_FAIXA INT
			,@MAX_MUSICA_FAIXA INT
			,@MUSICA_FAIXA     INT

			SELECT 
				@MIN_CD = MIN(CODIGO_CD), 
				@MAX_CD = MAX(CODIGO_CD) 
			FROM 
				CD

			SELECT 
				 @MIN_MUSICA_FAIXA = MIN(CODIGO_MUSICA)
				,@MAX_MUSICA_FAIXA = MAX(CODIGO_MUSICA) 
			FROM 
				MUSICA


		WHILE @CONT < @QTD_REGISTROS 
		BEGIN
				
			EXEC SP_NUMERO_ALEATORIO @MIN_CD, @MAX_CD, @CD OUT 
			EXEC SP_NUMERO_ALEATORIO @MIN_MUSICA_FAIXA, @MAX_MUSICA_FAIXA, @MUSICA_FAIXA OUT

			INSERT INTO FAIXA VALUES (@CONT, @CD, @MUSICA_FAIXA)
		
			SET @CONT = @CONT + 1 
		END
	END

END


